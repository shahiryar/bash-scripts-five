builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "$VSCODE_ENV_REPLACE" ]
[ -n "$VSCODE_ENV_PREPEND" ]
[ -n "$VSCODE_ENV_APPEND" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=$PROMPT_COMMAND
touch questionnaire.sh
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
sh questionnaire.sh
bash questionnaire.sh
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
which bash
which project
./questionnaire.sh
ls --color=auto -l
chmod +x questionnaire.sh
__vsc_prompt_cmd_original
ls --color=auto -l
./questionnaire.sh
__vsc_prompt_cmd_original
questionnaire.sh
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
clear
./questionnaire.sh
echo --help
man echo
echo -e this is some text\n\n
echo -e this is some text \n \n
clear
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
clear
touch countdown.sh
chmod +x countdown.sh
./countdown.sh
./countdown.sh arg1 arg2 arg3
./countdown.sh arg1 arg2 arg3
__vsc_prompt_cmd_original
man if
help
man if
help if
./countdown.sh arg1 arg2 arg3
./countdown.sh arg3 arg2 arg3
./countdown.sh arg3 arg2 arg3
./countdown.sh 4
./countdown.sh 5
help if
help
help [[ expression ]]
help test
./countdown.sh 5
[[ 4 -le 5 ]]
echo $?
mkdir adnan_folder
touch hello_there.txt
mv hello_there.txt adnan_folder
clear
[[ 4 -ge 5 ]]
echo $?
__vsc_prompt_cmd_original
[[ 4 -ge 5 ]]
[[ 10 -ne 5 ]]
bad_command
[[ 10 -eq 8 ]]
[[ 10 -eq 8 ]]
[[ 10 -eq 8 ]]
bad_command
ls --color=auto
rm -r adnan_folder/hello_there.txt
rmdir adnan_folder
clear
ls --color=auto -y
help test
[[ -a countdown.sh ]]
[[ -a bad_file.txt ]]
__vsc_prompt_cmd_original
[[ -x countdown.sh ]]
help {{
help [[
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
echo $?
echo $?
clear
[[ -x countdown.sh && 5 -le 4 ]]
__vsc_prompt_cmd_original
[[ -x countdown.sh ]]
[[ -x countdown.sh || 5 -le 4 ]]
./countdown.sh 1
./countdown.sh -1
help
./countdown.sh -1
./countdown.sh 10
help
ls --color=auto /
ls --color=auto /bin
man sleep
sleep 3
./countdown.sh 3
./countdown.sh 3
./countdown.sh 1
help while
./countdown.sh 5
./countdown.sh 10
./countdown.sh 120
clear
touch bingo.sh
chmod +x bingo.sh
nano bingo.sh
./bingo.sh
printenv
echo $LANG
declare -p
echo $RANDOM
echo $RANDOM
nano bingo.sh
./bingo.sh
./bingo.sh
./bingo.sh
nano bingo
nano bingo.sh
nano bingo.sh
./bingo.sh
I=5
I=0
echo $I
(( I++ ))
echo I
echo $I
help let
(( $I+= 10 ))
(( I+= 10 ))
echo $I
$(( I + 4 ))
echo $(( I+4 ))
echo $I
J=$(( I-6 ))
echo $J
echo $(( J*5+25))
echo $J
declare -p
declare -p J
declare -p RANDOM
echo $(( RANDOM%75 ))
echo $(( ((RANDOM%75))+1 ))
echo $(( RANDOM%75+1 ))
nano
nano bingo.sh
nano bingo.sh
./bingo.sh
./bingo.sh
nano bingo.sh
help let
nano bingo.sh
nano bingo.sh
./bingosh
./bingo.sh
./bingo.sh
nano bingo.sh
./bingo.sh
__vsc_prompt_cmd_original
./bingo.sh
clear
nano fortune.sh
rm fotune.sh
rm fortune.sh
clear
touch fortune.sh
chmod +x fortune.sh
nano fortune.sh
./fortune.sh
nano fortune.sh
ARR=("a" "b" "c")
echo $(ARR[1])
echo ${ARR[1]}
echo ${ARR[*]}
echo ${ARR[*\@]}
echo ${ARR[@]}
declare -p
declare -p ARR
clear
declare -p ARR
nano fortune.sh
./fortune.sh
echo ${ARR[-1]}
nano fortune.sh
./fortune.sj
./fortune.sh
./fortune.sh
./fortune.sh
./fortune.sh
./fortune.sh
./fortune.sh
./fortune.sh
clear
help
help function
nano fortune.sh
help {
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
help
nano fortune.sh
fortune.sh
./fortune.sh
nano fortune.sh
./fortune.sh
help
help until
nano fortune.sh
__vsc_prompt_cmd_original
./fortune.sh
help [[
[[ hello == hello ]]
[[ hello == world ]]
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
[[ hello =~ el ]]
[[ "hello world" =~ "lo wor" ]]
[[ "hello world" =~ ^h ]]
[[ "hello world" =~ ^h ]]
[[ "hello world" =~ ^h.+d$ ]]
[[ "hello world" =~ ^h.*d$ ]]
[[ "hello world" =~ ^h.-d$ ]]
[[ "hello world" =~ ^h.+d$ ]]
[[ "hd" =~ ^h.+d$ ]]
[[ "hd" =~ ^h.*d$ ]]
[[ "hd" =~ ^h*d$ ]]
[[ "hellod" =~ ^h+d$ ]]
[[ "hello d" =~ ^h+d$ ]]
[[ "hd" =~ ^h+d$ ]]
[[ "hd" =~ ^h.+d$ ]]
nano fortune.sh
VAR = 'hello world'
VAR= 'hello world'
VAR='hello world'
echo $VAR
[[ 'hello world' == $VAR ]]
[[ -n $VAR=='hello world' ]]
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
[[ $VAR == 'hello world' ]]
[[ $VAR == \?$ ]]
[[ $VAR =~ \?$ ]]
[[ test? =~ \?$ ]]
nano fortune.sh
__vsc_prompt_cmd_original
./fortune.sh
nano fortune.sh
./fortune.sh
nano fortune.sh
./fortune.sh
touch five.sh
chmod +x five.sh
echo
nano five.sh
./five.sh
nano five.sh
clear
